name: ci
# run all tests on the main branch
on:
  push:
    branches:
      - main
jobs:
  test-http:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2

      # run utility services in the background
      # using docker-compose (see docker-compose.yml file)
      - name: Run docker-compose
        run: docker-compose up -d

      # https://github.com/cypress-io/github-action
      - name: Cypress tests ðŸ§ª
        uses: cypress-io/github-action@v2
        with:
          build: npm run stop-only
          start: npm start
          wait-on: 'http://localhost:3000'
          record: true
          group: 'All GH Tests (HTTP)'
        env:
          # for recording test results and videos to Cypress Dashboard
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
          # for connecting to the Mongo and Redis services
          # see docker-compose.yml file
          SESSION_SECRET: SoMeSeCrEtStrInG
          MONGODB: mongodb://root:rootPass1234@localhost:27017/
          # email test results after the tests are finished
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          # pass SendGrid settings to the plugin via environment variables
          SENDGRID_HOST: ${{ secrets.SENDGRID_HOST }}
          SENDGRID_PORT: ${{ secrets.SENDGRID_PORT }}
          SENDGRID_USER: ${{ secrets.SENDGRID_USER }}
          SENDGRID_PASSWORD: ${{ secrets.SENDGRID_PASSWORD }}
          SENDGRID_FROM: ${{ secrets.SENDGRID_FROM }}

  test-https:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2

      # run utility services in the background
      # using docker-compose (see docker-compose.yml file)
      - name: Run docker-compose
        run: docker-compose up -d
        env:
          HTTPS: true

      # https://github.com/cypress-io/github-action
      - name: Cypress tests ðŸ§ª
        uses: cypress-io/github-action@v2
        with:
          build: npm run stop-only
          start: npm start
          # do not wait - let Cypress wait for HTTPS
          record: true
          group: 'All GH Tests (HTTPS)'
        env:
          HTTPS: true
          # for recording test results and videos to Cypress Dashboard
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
          # for connecting to the Mongo and Redis services
          # see docker-compose.yml file
          SESSION_SECRET: SoMeSeCrEtStrInG
          MONGODB: mongodb://root:rootPass1234@localhost:27017/
